version: '3'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: nginx
    # проброс портов
    ports:
      - "8000:80"
    volumes:
      - ./../app:/data/otus.local
      - ./nginx/default.conf:/etc/nginx/sites-enabled/default
    networks:
      - app-network


  app:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: app1 # имя контейнера после запуска
    volumes:
      - ./../app:/data/otus.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network


  postgres:
    image: postgres:latest
    restart: always
    container_name: db
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER:  ${DB_USERNAME}
    ports:
      - "5432:5432"
    volumes:
      - ./../dbdata:/var/lib/postgresql/data/
    networks:
      - app-network

  workspace:
    image: php:7.4
    container_name: console
    volumes:
      - ./../app:/data/otus.local
    networks:
      - app-network

  memcached:
    image: memcached:latest
    container_name: memcached
    ports:
      - "11211:11211"
    networks:
      - app-network

  redis:
    image: redis:6.2-alpine
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
#    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./cache:/data/otus.local
    networks:
      - app-network


networks:
  app-network:
    driver: bridge
