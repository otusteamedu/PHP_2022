-- 0. Вспомогательные функции

CREATE OR REPLACE FUNCTION
random_in_range(INTEGER, INTEGER) RETURNS INTEGER
AS $$
    SELECT floor(($1 + ($2 - $1 + 1) * random()))::INTEGER;
$$ LANGUAGE SQL;

-- 1. DDL

-- Страны
DROP TABLE IF EXISTS public.country CASCADE;
CREATE TABLE public.country (
	id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title character varying NOT NULL,
	status bool NOT NULL DEFAULT true,
	CONSTRAINT country_pk PRIMARY KEY (id)
);

-- Клиенты
DROP TABLE IF EXISTS public.customer CASCADE;
CREATE TABLE public.customer (
	id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	firstname character varying NOT NULL,
	lastname character varying NOT NULL,
	status bool NOT NULL DEFAULT true,
	CONSTRAINT customer_pk PRIMARY KEY (id)
);

-- Жанры
DROP TABLE IF EXISTS public.genre CASCADE;
CREATE TABLE public.genre (
	id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title character varying NOT NULL,
	status bool NOT NULL DEFAULT true,
	CONSTRAINT genre_pk PRIMARY KEY (id)
);

-- Залы
DROP TABLE IF EXISTS public.hall CASCADE;
CREATE TABLE public.hall (
	id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title character varying NOT NULL,
	status bool NOT NULL DEFAULT true,
	CONSTRAINT hall_pk PRIMARY KEY (id)
);

-- Схемы залов
DROP TABLE IF EXISTS public.hall_scheme CASCADE;
CREATE TABLE public.hall_scheme (
	id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	hall_id integer NOT NULL,
	row_number smallint,
	seat_number smallint,
	CONSTRAINT hall_scheme_pk PRIMARY KEY (id)
);
ALTER TABLE public.hall_scheme ADD CONSTRAINT hall_scheme_unq_idx UNIQUE (hall_id,"row_number",seat_number);
ALTER TABLE public.hall_scheme ADD CONSTRAINT hall_scheme_fk FOREIGN KEY (hall_id) REFERENCES public.hall(id) ON DELETE CASCADE ON UPDATE CASCADE;

-- Ограничения на просмотр
DROP TABLE IF EXISTS public.restriction CASCADE;
CREATE TABLE public.restriction (
	id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title character varying NOT NULL,
	status bool NOT NULL DEFAULT true,
	CONSTRAINT restriction_pk PRIMARY KEY (id)
);

-- Фильмы
DROP TABLE IF EXISTS public.movie CASCADE;
CREATE TABLE public.movie (
	id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title character varying NOT NULL,
	status bool NOT NULL DEFAULT true,
	description text,
	country_id integer DEFAULT NULL,
	restriction_id integer DEFAULT NULL,
	genre_id integer DEFAULT NULL,
	release_date date NOT NULL,
	image_url character varying NOT NULL,
	duration smallint NOT NULL,
	CONSTRAINT movie_pk PRIMARY KEY (id)
);
ALTER TABLE public.movie ADD CONSTRAINT country_fk FOREIGN KEY (country_id) REFERENCES public.country(id) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.movie ADD CONSTRAINT genre_fk FOREIGN KEY (genre_id) REFERENCES public.genre(id) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE public.movie ADD CONSTRAINT restriction_fk FOREIGN KEY (restriction_id) REFERENCES public.restriction(id) ON DELETE SET NULL ON UPDATE CASCADE;

-- Сеансы
DROP TABLE IF EXISTS public.session CASCADE;
CREATE TABLE public.session (
	id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	hall_id integer NOT NULL,
	movie_id integer NOT NULL,
	start_time timestamp NOT NULL,
	price real NOT NULL,
	status bool NOT NULL DEFAULT true,
	CONSTRAINT session_pk PRIMARY KEY (id)
);
ALTER TABLE public.session ADD CONSTRAINT session_hall_fk FOREIGN KEY (hall_id) REFERENCES public.hall(id) ON UPDATE CASCADE;
ALTER TABLE public.session ADD CONSTRAINT session_movie_fk FOREIGN KEY (movie_id) REFERENCES public.movie(id) ON UPDATE CASCADE;
ALTER TABLE public.session ADD CONSTRAINT session_un UNIQUE (hall_id,movie_id,start_time);

-- Билеты
DROP TABLE IF EXISTS public.ticket CASCADE;
CREATE TABLE public.ticket (
	id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	code character varying NOT NULL,
	customer_id integer NOT NULL,
	session_id integer NOT NULL,
	hall_scheme_id integer NOT NULL,
	total real NOT NULL,
	created_at timestamp NOT NULL,
	CONSTRAINT ticket_pk PRIMARY KEY (id)
);
ALTER TABLE public.ticket ADD CONSTRAINT customer_fk FOREIGN KEY (customer_id) REFERENCES public.customer(id) ON UPDATE CASCADE;
ALTER TABLE public.ticket ADD CONSTRAINT hall_scheme_1_fk FOREIGN KEY (hall_scheme_id) REFERENCES public.hall_scheme(id) ON UPDATE CASCADE;
ALTER TABLE public.ticket ADD CONSTRAINT session_fk FOREIGN KEY (session_id) REFERENCES public.session(id) ON UPDATE CASCADE;
ALTER TABLE public.ticket ADD CONSTRAINT ticket_un UNIQUE (session_id,hall_scheme_id);
ALTER TABLE public.ticket ADD CONSTRAINT ticket_un_c UNIQUE (code);