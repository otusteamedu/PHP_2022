version: '3.9'

services:

  nginx-balance:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: balance/nginx
    container_name: nginx-balance
    ports:
      - "80:80"
    volumes:
      - ./code/public:/data/mysite.local
      - ./code/backend:/data/backend
      - ./code/frontend:/data/frontend
    working_dir: /data/mysite.local
    networks:
      - app-network

  app1:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php
    container_name: app1
    volumes:
      - ./code/public:/data/mysite.local
      - ./code/backend:/data/backend
    networks:
      - app-network
  app2:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php
    container_name: app2
    volumes:
      - ./code/public:/data/mysite.local
      - ./code/backend:/data/backend
    networks:
      - app-network
  app3:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php
    container_name: app3
    volumes:
      - ./code/public:/data/mysite.local
      - ./code/backend:/data/backend
    networks:
      - app-network

  mysql:
    image: mysql:latest
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    ports:
      - '3309:3306'
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    command: redis-server
    networks:
      - app-network
    ports:
      - "6379:6379"
    volumes:
      - cache:/data

networks:
  app-network:
    driver: bridge

volumes:
  cache:
    driver: local
