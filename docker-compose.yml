version: '3'

services:
  app:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app
    volumes:
      - ./code:/data/application.local
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./code:/data/application.local
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.7.5-management
    container_name: ${RABBITMQ_HOST}
    ports:
      - "15672:15672"
      - "${RABBITMQ_PORT}:5672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - app-network

  #elasticsearch:
  #  image: bitnami/elasticsearch:7.9.2
  #  container_name: ${ELASTICSEARCH_HOST}
  #  environment:
  #    - cluster.name=docker-cluster
  #    - bootstrap.memory_lock=true
  #    - discovery.type=single-node
  #    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #  ulimits:
  #    memlock:
  #      soft: -1
  #      hard: -1
  #  ports:
  #    - "${ELASTICSEARCH_PORT}:9200"
  #    - "9300:9300"
  #  networks:
  #    - app-network

  #kibana:
  #  image: bitnami/kibana:7.9.2
  #  container_name: 'kibana'
  #  depends_on:
  #    - elasticsearch
  #  ports:
  #    - 5601:5601
  #  networks:
  #    - app-network

  #postgresql:
  #  image: postgres:13
  #  ports:
  #    - "${DB_PORT}:${DB_PORT}"
  #  container_name: ${DB_HOST}
  #  working_dir: /data/application.local
  #  restart: always
  #  environment:
  #    - POSTGRES_DB=${DB_NAME}
  #    - POSTGRES_USER=${DB_USER}
  #    - POSTGRES_PASSWORD=${DB_PASSWORD}
  #  volumes:
  #    - postgresql:/var/lib/postgresql/data
  #  networks:
  #    - app-network

  #redis:
  #  container_name: ${REDIS_HOST}
  #  image: redis
  #  ports:
  #    - "${REDIS_PORT}:6379"
  #  networks:
  #    - app-network

  #memcached:
  #  image: memcached:latest
  #  container_name: 'memcached'
  #  restart: always
  #  ports:
  #    - "11211:11211"
  #  networks:
  #    - app-network

#volumes:
#  postgresql:

networks:
  app-network:
    driver: bridge