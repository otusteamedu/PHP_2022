version: "3"

services:
  nginx:
    build: ./docker/nginx
    container_name: otus_host
    ports:
      - ${APP_PORT}:80
    volumes:
      - ./:/var/www/application.local
    networks:
      - network

  php-fpm:
    build: ./docker/php-fpm
    container_name: otus_web
    volumes:
      - ./:/var/www/application.local
    networks:
      - network

  create-consumer:
    build: ./docker/php-fpm
    container_name: otus_create_consumer
    volumes:
      - ./:/var/www/application.local
    networks:
      - network

  find-consumer:
    build: ./docker/php-fpm
    container_name: otus_find_consumer
    volumes:
      - ./:/var/www/application.local
    networks:
      - network

  remove-consumer:
    build: ./docker/php-fpm
    container_name: otus_remove_consumer
    volumes:
      - ./:/var/www/application.local
    networks:
      - network

  rabbitmq:
    image: rabbitmq:latest
    hostname: rabbitmq
    container_name: otus_rabbitmq
    ports:
      - ${RABBITMQ_PORT}:15672
      - ${AMQP_PORT}:5672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - network

  swagger:
    image: swaggerapi/swagger-ui
    container_name: otus_swagger
    volumes:
      - ./swagger:/usr/share/nginx/html/swagger
    ports:
      - "8080:8080"
    environment:
      API_URL: swagger/doc.yaml

  database:
    image: postgres
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    volumes:
      - ./docker/postgresql/data:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    networks:
      - network

networks:
  network:
    driver: bridge