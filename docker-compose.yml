version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: DockerfileNGINX
    image: nginx:latest
    container_name: hw1-nginx_server
    ports:
      - '8081:80'
    volumes:
      - "./public:/var/www/application.local"
      - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./docker/socket:/var/run"
    networks:
      - app-network

  app:
    build:
      context: ./php-fpm
      dockerfile: DockerfileFPM
    image: php
    container_name: hw1-php_fpm
    volumes:
      - "./public:/var/www/application.local"
      - "./docker/php-fpm/php.ini:/usr/local/etc/php/conf.d/php-custom.ini"
      - "./docker/php-fpm/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf"
      - "./docker/socket:/var/run"
    networks:
      - app-network

  redis:
    image: 'redis:latest'
    container_name: hw1-redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PORT_NUMBER=7000
    ports:
      - '7000:7000'
    volumes:
      - "./docker/redis/data:/data/"
    networks:
      - app-network

  memcached:
    image: 'memcached:latest'
    container_name: hw1-memcached
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - MEMCACHED_PORT=7001
    ports:
      - '7001:7001'
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: hw1-postgres
    restart: always
    environment:
        POSTGRES_USER: '${POSTGRES_USER}'
        POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
        POSTGRES_DB: '${POSTGRES_DB}'
    ports:
      - '7002:7002'
    volumes:
      - "./docker/postgres/db:/var/lib/postgresql"
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
