-- кинофильм
drop table if exists movie cascade;
CREATE TABLE movie (
                       movie_id INT GENERATED BY DEFAULT AS IDENTITY,
                       movie_name VARCHAR NOT null,
                       PRIMARY KEY(movie_id)
);

-- тип
drop table if exists attribute_type cascade;
CREATE TABLE attribute_type (
                                attribute_type_id INT GENERATED BY DEFAULT AS IDENTITY,
                                attribute_type_name VARCHAR NOT null,
                                data_type VARCHAR NOT null,
                                PRIMARY KEY(attribute_type_id)
);

-- атрибут
drop table if exists attribute cascade;
CREATE TABLE attribute (
                           attribute_id INT GENERATED BY DEFAULT AS IDENTITY,
                           attribute_type_id INT,
                           attribute_name VARCHAR NOT null,
                           PRIMARY KEY(attribute_id),
                           CONSTRAINT fk_type
                               FOREIGN KEY(attribute_type_id)
                                   REFERENCES attribute_type(attribute_type_id)
);

-- значение
drop table if exists value cascade;
CREATE TABLE value (
                       value_id INT GENERATED BY DEFAULT AS IDENTITY,
                       movie_id INT,
                       attribute_id INT,
                       value_text VARCHAR,
                       value_bool INT,
                       value_date TIMESTAMP,
                       PRIMARY KEY(value_id),
                       CONSTRAINT fk_movie
                           FOREIGN KEY(movie_id)
                               REFERENCES movie(movie_id),
                       CONSTRAINT fk_attribute
                           FOREIGN KEY(attribute_id)
                               REFERENCES attribute(attribute_id)
);

insert into movie (movie_id, movie_name) values (1, 'Форест Гамп');
insert into movie (movie_id, movie_name) values (2, 'Облачный Атлас');

insert into attribute_type (attribute_type_id , attribute_type_name, data_type) values (1, 'рецензия', 'text');
insert into attribute_type (attribute_type_id , attribute_type_name, data_type) values (2, 'премия', 'bool');
insert into attribute_type (attribute_type_id , attribute_type_name, data_type) values (3, 'важные даты', 'date');
insert into attribute_type (attribute_type_id , attribute_type_name, data_type) values (4, 'служебные даты', 'date');

insert into attribute (attribute_id, attribute_type_id, attribute_name) values (1, 1, 'Рецензия Антона Долина');
insert into attribute (attribute_id, attribute_type_id, attribute_name) values (2, 1, 'Рецензия Неизвестной Киноакадемии');
insert into attribute (attribute_id, attribute_type_id, attribute_name) values (3, 2, 'Премия Оскар');
insert into attribute (attribute_id, attribute_type_id, attribute_name) values (4, 2, 'Премия Ника');
insert into attribute (attribute_id, attribute_type_id, attribute_name) values (5, 3, 'Мировая премьера');
insert into attribute (attribute_id, attribute_type_id, attribute_name) values (6, 3, 'Премьера в России');
insert into attribute (attribute_id, attribute_type_id, attribute_name) values (7, 4, 'Начало продажи билетов');
insert into attribute (attribute_id, attribute_type_id, attribute_name) values (8, 4, 'Запуск рекламы на ТВ');

insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (1, 1, 'Фильм Форест Гамп -- неплохой. А. Долин', null, null);
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (1, 2, 'Фильм Форест Гамп -- ничего так. Неизвестная Академия Кино', null, null);
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (1, 3, null, 1, null);
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (1, 4, null, 0, null);
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (1, 5, null, null, '2022-07-30');
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (1, 6, null, null, '2022-08-20');
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (1, 7, null, null, '2022-08-21');
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (1, 8, null, null, '2022-08-22');

insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (2, 1, 'Фильм Облачный Атлас -- очень даже. А. Долин', null, null);
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (2, 2, 'Фильм Облачный Атлас определенно удался. Неизвестная Академия Кино', null, null);
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (2, 3, null, 0, null);
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (2, 4, null, 1, null);
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (2, 5, null, null, '2022-08-20');
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (2, 6, null, null, '2022-08-18');
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (2, 7, null, null, '2022-08-19');
insert into value (movie_id, attribute_id, value_text, value_bool, value_date) values (2, 8, null, null, '2022-07-30');

---------------------------------------


drop view if exists schedule;
create view schedule as select a.attribute_name,
                               (case
                                    when value_date = cast(now() as date)  then 'today'
                                    else ''
                                   end) as today,
                               (case
                                    when value_date = cast(now() + interval '+20 days' as date) then 'after_20_days'
                                    else ''
                                   end) as after_20_days
                        from value v
                                 join attribute a on a.attribute_id = v.attribute_id
                                 join attribute_type at on at.attribute_type_id = a.attribute_type_id
where at.data_type = 'date';


drop view if exists marketing;
create view marketing as select at.attribute_type_name, a.attribute_name,
                                (case
                                     when value_text is not null then value_text
                                     when value_bool is not null then value_bool::varchar(255)
	when value_date is not null then value_date::varchar(255)
	else ''
end) as value
from value v
join attribute a on a.attribute_id = v.attribute_id
join attribute_type at on at.attribute_type_id = a.attribute_type_id;




