CREATE TABLE IF NOT EXISTS public.cinema_hall
(
    cinema_hall_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    cinema_hall_name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    cinema_hall_capacity integer NOT NULL,
    CONSTRAINT "PK_cineme_hall_id" PRIMARY KEY (cinema_hall_id)
)


CREATE TABLE IF NOT EXISTS public.film
(
    film_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    film_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    film_duration integer NOT NULL,
    CONSTRAINT "PK_film_id" PRIMARY KEY (film_id)
)

CREATE TABLE IF NOT EXISTS public.place
(
    place_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    seat_number integer NOT NULL,
    row_seat_id integer NOT NULL,
    CONSTRAINT "PK_place_id" PRIMARY KEY (place_id),
    CONSTRAINT "UNIQUE_row_seat_id_seat_number" UNIQUE (seat_number, row_seat_id)
        INCLUDE(seat_number, row_seat_id),
    CONSTRAINT "FK1_row_seat_id" FOREIGN KEY (row_seat_id)
        REFERENCES public.row_seat (row_seat_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

CREATE TABLE IF NOT EXISTS public.row_seat
(
    row_seat_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    cinema_hall_id integer NOT NULL,
    price_id integer NOT NULL,
    row_seat_number integer NOT NULL,
    CONSTRAINT "PK_row_seat_id" PRIMARY KEY (row_seat_id),
    CONSTRAINT "UNIQUE_row_seat_number_cinema_hall_id" UNIQUE (row_seat_number, cinema_hall_id)
        INCLUDE(cinema_hall_id, row_seat_number),
    CONSTRAINT "FK1_cinema_hall_id" FOREIGN KEY (cinema_hall_id)
        REFERENCES public.cinema_hall (cinema_hall_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT "FK2_price_id" FOREIGN KEY (price_id)
        REFERENCES public.table_price (price_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

CREATE TABLE IF NOT EXISTS public.seance
(
    seance_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    film_id integer NOT NULL,
    cinema_hall_id integer NOT NULL,
    seance_start timestamp with time zone NOT NULL,
    seance_finish timestamp with time zone NOT NULL,
    CONSTRAINT "PK_seance_id" PRIMARY KEY (seance_id),
    CONSTRAINT "FK1_film_id" FOREIGN KEY (film_id)
        REFERENCES public.film (film_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT "FK2_cinema_hall_id" FOREIGN KEY (cinema_hall_id)
        REFERENCES public.cinema_hall (cinema_hall_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

CREATE TABLE IF NOT EXISTS public.table_price
(
    price_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    price numeric NOT NULL,
    price_name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_price_id " PRIMARY KEY (price_id),
    CONSTRAINT positive_price CHECK (price > 0::numeric)
)

CREATE TABLE IF NOT EXISTS public.ticket
(
    ticket_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    seance_id integer NOT NULL,
    place_id integer NOT NULL,
    CONSTRAINT "PK_ticket_id" PRIMARY KEY (ticket_id),
    CONSTRAINT "UNIQUE_seance_id_place_id" UNIQUE (seance_id, place_id)
        INCLUDE(seance_id, place_id),
    CONSTRAINT "FK1_seance_id" FOREIGN KEY (seance_id)
        REFERENCES public.seance (seance_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT "FK2_place_id" FOREIGN KEY (place_id)
        REFERENCES public.place (place_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)