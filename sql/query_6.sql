-- Запрос
analyse movie;
-- не очень оптимальный способ найти фильмы с названиями из двух или более слов
explain select m.name
from movie m
where CHAR_LENGTH(substring(name, '\S(?:.*\S)*')) - CHAR_LENGTH(REPLACE(substring(name, '\S(?:.*\S)*'), ' ', '')) > 0;



-- План при 10 000 строк
-- +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
-- |QUERY PLAN                                                                                                                                                               |
-- +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
-- |Seq Scan on movie m  (cost=0.00..66.00 rows=667 width=11)                                                                                                                |
-- |  Filter: ((char_length("substring"((name)::text, '\S(?:.*\S)*'::text)) - char_length(replace("substring"((name)::text, '\S(?:.*\S)*'::text), ' '::text, ''::text))) > 0)|
-- +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

-- План при 10 000 000 строк
-- +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
-- |QUERY PLAN                                                                                                                                                               |
-- +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
-- |Seq Scan on movie m  (cost=0.00..65811.00 rows=666667 width=11)                                                                                                          |
-- |  Filter: ((char_length("substring"((name)::text, '\S(?:.*\S)*'::text)) - char_length(replace("substring"((name)::text, '\S(?:.*\S)*'::text), ' '::text, ''::text))) > 0)|
-- +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

-- Оптимизации
CREATE INDEX movie_unreal_index ON movie ((CHAR_LENGTH(substring(name, '\S(?:.*\S)*')) - CHAR_LENGTH(REPLACE(substring(name, '\S(?:.*\S)*'), ' ', ''))));


-- План при 10 000 000 строк после оптимизаций
-- +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
-- |QUERY PLAN                                                                                                                                                                         |
-- +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
-- |Bitmap Heap Scan on movie m  (cost=7431.10..36575.44 rows=666667 width=11)                                                                                                         |
-- |  Recheck Cond: ((char_length("substring"((name)::text, '\S(?:.*\S)*'::text)) - char_length(replace("substring"((name)::text, '\S(?:.*\S)*'::text), ' '::text, ''::text))) > 0)    |
-- |  ->  Bitmap Index Scan on movie_unreal_index  (cost=0.00..7264.43 rows=666667 width=0)                                                                                            |
-- |        Index Cond: ((char_length("substring"((name)::text, '\S(?:.*\S)*'::text)) - char_length(replace("substring"((name)::text, '\S(?:.*\S)*'::text), ' '::text, ''::text))) > 0)|
-- +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
