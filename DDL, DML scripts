CREATE TABLE IF NOT EXISTS public.film
(
    id_film integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    film_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_id_film" PRIMARY KEY (id_film)
)


CREATE TABLE IF NOT EXISTS public.film_attr_type
(
    id_type_attr integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    attr_type_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_id_type_attr" PRIMARY KEY (id_type_attr),
    CONSTRAINT "UNIQUE_attr_type_name" UNIQUE (attr_type_name)
        INCLUDE(attr_type_name)
)


CREATE TABLE IF NOT EXISTS public.film_attr
(
    "id_attr int" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_type_attr integer NOT NULL,
    attr_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_id_attr" PRIMARY KEY ("id_attr int"),
    CONSTRAINT "UNIQUE_attr_name" UNIQUE (attr_name)
        INCLUDE(attr_name),
    CONSTRAINT "FK1_id_type_attr" FOREIGN KEY (id_type_attr)
        REFERENCES public.film_attr_type (id_type_attr) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
        NOT VALID
)


CREATE TABLE IF NOT EXISTS public.film_values
(
    id_val integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_film integer NOT NULL,
    id_attr integer NOT NULL,
    val_int integer,
    val_char character varying COLLATE pg_catalog."default",
    val_date date,
    val_boolean boolean,
    "val_float " numeric,
    CONSTRAINT "PK_id_val" PRIMARY KEY (id_val),
    CONSTRAINT "FK1_id_film" FOREIGN KEY (id_film)
        REFERENCES public.film (id_film) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK2_id_attr" FOREIGN KEY (id_attr)
        REFERENCES public.film_attr ("id_attr int") MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
)


CREATE UNIQUE INDEX index_film_values
ON film_values(id_film, id_attr);



INSERT INTO film(film_name) VALUES
    ('Рокки'),
    ('Соучастник'),
    ('Телефонная будка');


INSERT INTO film_attr_type(attr_type_name) VALUES
    ('рецензии '),
    ('награды'),
    ('важные даты'),
    ('служебные даты'),
    ('зрителей'),
    ('сборы'); 


INSERT INTO film_attr(id_type_attr,attr_name) VALUES
    (1,'рецензии положительные'),
    (1,'рецензии отрицательные'),
    (1,'рецензии нейтральные'),
    (2,'Оскар'),
    (2,'Золотой глобус'),
    (2,'Британская академия'),
    (2,'Премия канала MTV'),
    (3,'Премьера в Росcии'),
    (3,'Премьера в мире'),
    (3,'Релиз на DVD'),
    (3,'Релиз на Blu-ray'),
    (4,'дата начала продажи билетов'),
    (4,'когда запускать рекламу на ТВ'),
    (5,'посмотрели в Мире'),
    (6,'собрали по Миру')
    (3,'Повторный показ в кинотеатре');


INSERT INTO film_values(id_film,id_attr,val_char) VALUES
    (1,1,'Крутой фильм'),
	(1,2,'Плохой фильм'),
	(1,3,'ну такое');

INSERT INTO film_values(id_film,id_attr,val_boolean) VALUES
    (1,4,'true'),
	(1,5,'true');

INSERT INTO film_values(id_film,id_attr,val_date) VALUES
    (1,8,'1977-08-01'),
	(1,9,'1976-11-20'),
	(1,10,'2005-04-12'),
	(1,11,'2014-02-13'),
    (1,16,'2022-11-10');


INSERT INTO film_values(id_film,id_attr,val_date) VALUES
    (1,12,current_date + interval '20 day'),
	(1,13,current_date + interval '3 day');


INSERT INTO film_values(id_film,id_attr,val_int) VALUES
    (1,14,59100000);

INSERT INTO film_values(id_film,id_attr,val_float) VALUES
    (1,15,225000000);




-- View: public.todo_film

-- DROP VIEW public.todo_film;

CREATE OR REPLACE VIEW public.todo_film
 AS
 SELECT film.film_name AS "Фильм",
    film_attr_type.attr_type_name AS "Задача",
    film_values.val_date AS "Дата задачи"
   FROM film
     JOIN film_values ON film.id_film = film_values.id_film
     JOIN film_attr ON film_attr.id_attr = film_values.id_attr
     JOIN film_attr_type ON film_attr_type.id_type_attr = film_attr.id_type_attr
  WHERE (film_values.val_date = ANY (ARRAY[CURRENT_DATE::timestamp without time zone, CURRENT_DATE + '20 days'::interval])) AND film_attr_type.id_type_attr = 4
  ORDER BY film_values.val_date, film.film_name;

ALTER TABLE public.todo_film
    OWNER TO igor;





-- View: public.marketing_film

-- DROP VIEW public.marketing_film;

CREATE OR REPLACE VIEW public.marketing_film
 AS
 SELECT film.film_name AS "Фильм",
    film_attr_type.attr_type_name AS "Тип атрибута",
    film_attr.attr_name AS "Атрибут",
        CASE
            WHEN film_values.val_int IS NOT NULL THEN film_values.val_int::text
            WHEN film_values.val_char IS NOT NULL THEN film_values.val_char::text
            WHEN film_values.val_date IS NOT NULL THEN film_values.val_date::text
            WHEN film_values.val_boolean IS NOT NULL THEN film_values.val_boolean::text
            WHEN film_values.val_float IS NOT NULL THEN film_values.val_float::text
            ELSE NULL::text
        END AS "Значение"
   FROM film
     JOIN film_values ON film.id_film = film_values.id_film
     JOIN film_attr ON film_attr.id_attr = film_values.id_attr
     JOIN film_attr_type ON film_attr_type.id_type_attr = film_attr.id_type_attr
  ORDER BY film.film_name, film_attr_type.attr_type_name, film_attr.attr_name;

ALTER TABLE public.marketing_film
    OWNER TO igor;



