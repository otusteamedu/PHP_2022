version: '3'

services:

  balancer:
    build:
      context: ./nginx/balancer
      dockerfile: Dockerfile
    image: myapp/balancer
    container_name: balancer
    ports:
      - "80:80"
    volumes:
      - ./nginx/balancer/hosts/application.local.conf:/etc/nginx/conf.d/application.local.conf
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx/webserver
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 3
    image: myapp/nginx
    expose:
      - "8080"
    volumes:
      - ./public:/data/application.local/public
      - ./code:/data/application.local/code
      - ./vendor:/data/application.local/vendor
      - ./templates:/data/application.local/templates
      - ./nginx/webserver/hosts/application.local.conf:/etc/nginx/conf.d/application.local.conf
    networks:
      - app-network

  app:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php
    env_file:
      - .env
    volumes:
      - ./public:/data/application.local/public
      - ./code:/data/application.local/code
      - ./vendor:/data/application.local/vendor
      - ./templates:/data/application.local/templates
      - ./composer.json:/data/application.local/composer.json
      - ./composer.lock:/data/application.local/composer.lock
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network

  memcached:
    image: memcached
    container_name: memcached
    ports:
      - "11211:11211"
    volumes:
      - ./volumes/memcached:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge