# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Балансировщиком
  balancer:
    build:
      context: ./nginx
      dockerfile: balancer/Dockerfile
    container_name: balancer
    # проброс портов
    ports:
      - "80:80"
    volumes:
       - ./code:/var/www
    networks:
      - app-network

  #Сервер 1
  nginx1:
    build:
      context: ./nginx
      dockerfile: ngnix1/Dockerfile
    container_name: nginx1
    # проброс портов
    ports:
      - "81:80"
    volumes:
      - ./code:/var/www
    networks:
      - app-network

  #Сервер 2
  nginx2:
    build:
      context: ./nginx
      dockerfile: ngnix1/Dockerfile
    container_name: nginx2
    # проброс портов
    ports:
      - "82:80"
    volumes:
      - ./code:/var/www
    networks:
      - app-network

  #Сервер 3
  nginx3:
    build:
      context: ./nginx
      dockerfile: ngnix1/Dockerfile
    container_name: nginx3
    # проброс портов
    ports:
      - "83:80"
    volumes:
      - ./code:/var/www
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  app1:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php # имя будущего образа
    container_name: app1 # имя контейнера после запуска
    volumes:
       - ./code:/var/www
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  app2:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php # имя будущего образа
    container_name: app2 # имя контейнера после запуска
    volumes:
      - ./code:/var/www
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  #Контейнер с PHP-FPM, назовём его app
  app3:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: balance/php # имя будущего образа
    container_name: app3 # имя контейнера после запуска
    volumes:
      - ./code:/var/www
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  memcached:
    container_name: memcached
    image: memcached:latest
    restart: always
    ports:
      - "11211:11211"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge