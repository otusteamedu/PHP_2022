version: '3.8'

services:
  nginx:
    build:
      context: docker/nginx
      args:
        - WORKDIR=${DOCKER_WORKDIR}
    ports:
      - ${DOCKER_NGINX_PORT}:80
      - ${DOCKER_NGINX_SSL_PORT}:443
    volumes:
      - ./${DOCKER_BACKEND_WORKDIR}:${DOCKER_WORKDIR}
      - ./${DOCKER_DIR}/data/nginx/logs:/var/log/nginx
    networks:
      - app-network
  php-fpm:
    build:
      context: docker/php-fpm
      args:
        - WORKDIR=${DOCKER_WORKDIR}
        - PHP_VERSION=${DOCKER_PHP_VERSION}
    volumes:
      - ./${DOCKER_BACKEND_WORKDIR}:${DOCKER_WORKDIR}
    networks:
      - app-network
  postgres:
    image: postgres:14.2
    ports:
      - ${DOCKER_PG_PORT}:5432
    volumes:
      - ./docker/data/postgres/:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_USER: ${DOCKER_PG_USER}
      POSTGRES_PASSWORD: ${DOCKER_PG_PASSWORD}
    networks:
      - app-network
  test-php-fpm:
    build:
      context: docker/php-fpm
      args:
        - WORKDIR=${DOCKER_WORKDIR}
        - PHP_VERSION=${DOCKER_PHP_VERSION}
    volumes:
      - ./${DOCKER_BACKEND_WORKDIR}:${DOCKER_WORKDIR}
    networks:
      - test-network
  test-postgres:
    image: postgres:14.2
    environment:
      POSTGRES_USER: ${DOCKER_PG_USER}
      POSTGRES_PASSWORD: ${DOCKER_PG_PASSWORD}
    networks:
      - test-network
  workspace:
    build:
      context: docker/workspace
      args:
        - WORKDIR=${DOCKER_WORKDIR}
        - PHP_VERSION=${DOCKER_PHP_VERSION}
    volumes:
      - ./${DOCKER_BACKEND_WORKDIR}:${DOCKER_WORKDIR}
    command: sh -c "composer install"
networks:
  test-network:
    driver: bridge
  app-network:
    driver: bridge