# версия синтаксиса
version: '3'

services:
  #контейнер с Nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network
  #БД
  mysql:
    image: mysql
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - "/mysql/data:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: ${TZ}
    networks:
      - app-network
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_HOST=mysql
    networks:
      - app-network
  #Контейнер с PHP-FPM
  fpm:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: fpm
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network
  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis-data:/var/lib/redis
    hostname: redis
    networks:
      - app-network
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - app-network
  memcached:
    container_name: memcached
    command: memcached -m 512
    image: memcached
    restart: always
    ports:
      - "11211:11211"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge