# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: nginx
    # проброс портов
    ports:
      - "80:80"
    volumes:
      - ./code:/data/mysite.local
      - ./nginx/hosts/mysite.local.conf:/etc/nginx/conf.d/mysite.local.conf
    depends_on:
      - php
      - postgres
    networks:
      - app-network



  php:
    build:
      context: ./php
      dockerfile: Dockerfile
    image: myapp/php
    container_name: php
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network
    depends_on:
      - postgres

  postgres:
    image: postgres:12
    ports:
      - 15432:5432
    container_name: 'postgresql'
    working_dir: /data/mysite.local
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - dump:/data/mysite.local
      - postgresql:/var/lib/postgresql/data
    networks:
      - app-network
  redis:
    container_name: 'redis'
    image: redis
    ports:
      - 6379:6379


  rabbitmq:
    image: rabbitmq:3.7.5-management
    working_dir: /app
    hostname: rabbit-mq
    container_name: 'rabbit-mq'
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
  memcached:
    image: memcached:latest
    container_name: memcached
    ports:
      - "11211:11211"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    container_name: 'elasticsearch'
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.0
    container_name: 'kibana'
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    networks:
      - app-network


#Docker Networks
networks:
  app-network:
    driver: bridge

volumes:
  dump:
  postgresql: