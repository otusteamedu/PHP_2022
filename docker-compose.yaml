version: '3'

services:
  nginx:
    build:
      context: ./docker/nginx
    image: myapp/nginx
    container_name: webserver
    ports:
      - "80:80"
    volumes:
      - ./public:/data/mysite.local
    networks:
      - app-network

  app:
    build:
      context: ./docker/fpm
    image: myapp/php
    container_name: app1
    volumes:
      - ./public:/data/mysite.local
    networks:
      - app-network

  db:
    container_name: mysql
    build:
      context: ./docker/mysql
      args:
        - TZ=${TZ}
        - TEMP_DIR=${TEMP_DIR}
        - DB_PORT=${DB_PORT}
        - DB_CHARSET=${DB_CHARSET}
        - DB_COLLASION=${DB_COLLASION}
        - DB_NAME=${DB_NAME}
    restart: always
    command: --init-file /usr/local/etc/mysql/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./dbdata:/var/lib/mysql
      - ./public:/data/mysite.local
    networks:
      - app-network

  memcached:
    container_name: memcached
    image: memcached:latest
    restart: unless-stopped
    depends_on:
      - db
      - app
    networks:
      - app-network

  workspace:
    image: php:7.4
    container_name: console
    volumes:
      - ./public:/data/mysite.local
    networks:
      - app-network

  redis:
    image: redis:4.0
    container_name: redis
    restart: unless-stopped
    depends_on:
      - db
      - app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
