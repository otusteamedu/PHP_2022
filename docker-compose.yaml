# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: otus/nginx
    container_name: webserver
    depends_on:
      - php
    # проброс портов
    ports:
      - "80:80"
    volumes:
       - ./code:/data/otus.local
    networks:
      - internal


  #Контейнер с PHP-FPM, назовём его app
  php:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: otus/php # имя будущего образа
    container_name: php # имя контейнера после запуска
    depends_on:
      - db
      - memcached
      - redis
    volumes:
       - ./code:/data/otus.local
       - ./fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    environment:
      XDEBUG_CONFIG: "remote_host=192.168.220.1 remote_enable=1"
      PHP_IDE_CONFIG: "serverName=otus.local"
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - internal

  # контейнер с MySQL
  db:
    image: postgres:13.3
    container_name: "db_${ENAME}"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5432:5432"
      # You should definitely change the password in production
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - ./dbdata:/var/lib/postgresql/data
      - ./code/sql:/sql
    networks:
      - internal

  workspace:
    build:
      context: ./console
      dockerfile: Dockerfile
    container_name: console
    image: otus/php-cli
    volumes:
      - ./code:/data/otus.local
      - ./console/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    depends_on:
      - db
      - memcached
      - redis
    environment:
      XDEBUG_CONFIG: "remote_host=192.168.220.1 remote_enable=1"
      PHP_IDE_CONFIG: "serverName=otus.local"
    networks:
      - internal

  memcached:
    image: 'bitnami/memcached:latest'
    container_name: memcached
    ports:
      - '11211:11211'
    networks:
      - internal

  redis:
    image: redis:6.2-alpine
    restart: always
    container_name: redis
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis:/data
    networks:
      - internal

volumes:
  redis:
    driver: local
  db:
    driver: local

#Docker Networks
networks:
  internal:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.220.0/28