version: '3.8'

services:
  nginx:
    build:
      context: docker/nginx
      args:
        - WORKDIR=${DOCKER_WORKDIR}
    ports:
      - ${DOCKER_NGINX_PORT}:80
    volumes:
      - ./${DOCKER_APPDIR}:${DOCKER_WORKDIR}
      - ./${DOCKER_DIR}/data/nginx/logs:/var/log/nginx
    networks:
      - app-network
  php-fpm:
    build:
      context: docker/php-fpm
      args:
        - WORKDIR=${DOCKER_WORKDIR}
        - PHP_VERSION=${DOCKER_PHP_VERSION}
    volumes:
      - ./${DOCKER_APPDIR}:${DOCKER_WORKDIR}
    networks:
      - app-network
    environment:
      DB_NAME: ${DOCKER_PG_DATABASE}
      DB_USER: ${DOCKER_PG_USER}
      DB_PASSWORD: ${DOCKER_PG_PASSWORD}
  postgres:
    image: postgres:${DOCKER_PG_VERSION}
    restart: always
    ports:
      - ${DOCKER_PG_PORT}:5432
    environment:
      POSTGRES_DB: ${DOCKER_PG_DATABASE}
      POSTGRES_USER: ${DOCKER_PG_USER}
      POSTGRES_PASSWORD: ${DOCKER_PG_PASSWORD}
      PGDATA: /var/lib/postgresql/data/${DOCKER_PG_DATABASE}/
    volumes:
      - ./${DOCKER_DIR}/data/postgres/data:/var/lib/postgresql/data/pgdata
    networks:
      - app-network
  redis:
    image: 'redis:latest'
    networks:
      - app-network
  memcached:
    image: 'bitnami/memcached:latest'
    networks:
      - app-network
  workspace:
    build:
      context: docker/workspace
      args:
        - WORKDIR=${DOCKER_WORKDIR}
        - PHP_VERSION=${DOCKER_PHP_VERSION}
    volumes:
      - ./${DOCKER_APPDIR}:${DOCKER_WORKDIR}
    depends_on:
      - postgres
    networks:
      - app-network
networks:
  app-network:
    driver: bridge