<?php

/**
 * API простых чисел
 * Это учебное API в рамках домашнего задания Otus. Сервис берет целое число и осуществляет проверку на простоту. Задание ставится в очередь и результат доступен по ИД задания. Так как задание учебное по теме API, то здесь вы не встретитие изощренных алгоритмов проверки на простоту.
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: pashilyaev@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;
use App\Models\Task;

use App\Jobs\CheckNumberJob;
use Domain\Services\CheckNumber;
use Domain\ValueObjects\Number;
use Illuminate\Support\Facades\Request;


class NumberApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    protected function guidv4($data = null) {
        // Generate 16 bytes (128 bits) of random data or use the data passed into the function.
        $data = $data ?? random_bytes(16);
        assert(strlen($data) == 16);

        // Set version to 0100
        $data[6] = chr(ord($data[6]) & 0x0f | 0x40);
        // Set bits 6-7 to 10
        $data[8] = chr(ord($data[8]) & 0x3f | 0x80);

        // Output the 36 character UUID.
        return vsprintf('%s%s-%s-%s-%s-%s%s%s', str_split(bin2hex($data), 4));
    }


    /**
     * Operation checkNumber
     *
     * Добавление числа на проверку.
     *
     *
     * @return Http response
     */
    public function checkNumber()
    {
        $input = Request::all();
        if (isset($input[0]) && is_int($input[0])) {
            $id = $this->guidv4();

            $task = new Task;
            $task->uuid = $id;
            $task->number = $input[0];
            $task->result = null;

            if ($task->save()) {
                dispatch(new CheckNumberJob($id, new Number($task->number)));
                return response($id);
            } else {
                return response("DB error!", 400);
            }
        }
        else
            return response("Input error!", 400);
    }
}
